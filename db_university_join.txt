ES 1
Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia.
SELECT COUNT(*) FROM `students` INNER JOIN `degrees` ON `degree_id` = `degrees`.`id`
WHERE `degrees`.`name` = 'Corso di Laurea in Economia';

ES 2
Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di Neuroscienze.
SELECT * FROM `departments` INNER JOIN `degrees` ON `departments` . `id` = `degrees` . `department_id` WHERE `departments` . `name` = "Dipartimento di Neuroscienze" AND `level` = "magistrale";

ES 3
Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44).
SELECT * 
FROM `course_teacher` 
INNER JOIN `courses` 
ON `course_teacher` . `course_id` =  `courses` . `id`
INNER JOIN `teachers` ON `course_teacher` . `teacher_id` = `teachers` . `id`
WHERE `teachers` . `id` = 44;

ES 4
Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui sono iscritti e il
relativo dipartimento, in ordine alfabetico per cognome e nome.
SELECT * 
FROM `students` 
INNER JOIN `degrees` 
ON `students` . `degree_id`= `degrees` . `id`
INNER JOIN `departments` ON `degrees` . `department_id` = `departments` . `id`
ORDER BY `students` . `surname`, `students` . `name`;

ES 5
Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti.
SELECT COUNT(*)
FROM `degrees` 
INNER JOIN `courses` 
ON  `courses` . `degree_id` = `degrees` . `id`
INNER JOIN `course_teacher` ON `course_teacher` . `course_id` = `courses` . `id`
INNER JOIN `teachers` ON `course_teacher` . `teacher_id` = `teachers` . `id`
ORDER BY `degrees`.`id`;

ES 6
Selezionare tutti i docenti che insegnano nel Dipartimento di Matematica.
SELECT `teachers` . * 
FROM `teachers` 
INNER JOIN `course_teacher`
ON `course_teacher` . `teacher_id` = `teachers` . `id`
INNER JOIN `courses`
ON `course_teacher` . `course_id` = `courses` . `id`
INNER JOIN `degrees`
ON `courses` . `degree_id` = `degrees` . `id`
INNER JOIN `departments`
ON `degrees` . `department_id`= `departments` . `id`
WHERE `departments` . `name` = "Dipartimento di Matematica";


ES 8
BONUS: Selezionare per ogni studente quanti tentativi dâ€™esame ha sostenuto per
superare ciascuno dei suoi esami.
SELECT `courses`.`name`AS `name_course`, `students`.`name`, `students`.`surname` , COUNT(`exam_student` . `vote`) AS `total_attempts`, 
MAX(`exam_student`.`vote`) AS `voto_finale`
FROM `students` 
INNER JOIN `exam_student`
ON  `exam_student` . `student_id` = `students` . `id`
INNER JOIN `exams`
ON `exam_student` . `exam_id` = `exams` . `id`
INNER JOIN `courses`
ON `exams` . `course_id` = `courses` . `id`
GROUP BY `courses`.`id`, `students`.`id`
HAVING `voto_finale` >= 18;
